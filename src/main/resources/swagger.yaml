openapi: 3.0.0
info:
  title: Demonstration of the use Swagger OpenAPI
  version: 0.0.1
tags:
  - name: items
paths:
  /items:
    post:
      tags:
        - items
      summary: Create item
      description: Create item and return data item
      operationId: createItem
      requestBody:
        description: Receive json data item
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemForm'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWeb'
        '404':
          description: Not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - items
      summary: Update item
      description: Update item and return new data item
      operationId: updateItem
      requestBody:
        description: Receive json data item
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /items/{id}:
    get:
      tags:
        - items
      summary: Get item
      description:  Get item by id
      operationId: getItemById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWeb'
        '404':
          description: Not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - items
      summary: Delete item
      description:  Delete item by id
      operationId: deleteItemById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
                example: Item deleted
        '404':
          description: Not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Item:
      type: object
      required:
        - id
        - context
      properties:
        id:
          type: integer
          format: int64
        context:
          type: string
          example: Lorem ipsum
    ItemForm:
      type: object
      required:
        - context
      properties:
        context:
          type: string
          example: Lorem ipsum
    ItemWeb:
      type: object
      required:
        - id
        - context
      properties:
        id:
          type: integer
          format: int64
        context:
          type: string
          example: Lorem ipsum
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
